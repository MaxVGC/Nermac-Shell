/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Servidor;

import Frames.Alerta;
import java.awt.Color;
import java.awt.event.KeyEvent;
import java.io.IOException;
import java.net.InetAddress;
import java.net.InetSocketAddress;
import java.net.Socket;
import java.net.SocketAddress;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;

/**
 *
 * @author carlo
 */
public class F_sServidor extends javax.swing.JFrame implements Runnable {

    Thread WConnexion;
    Servidor s = new Servidor();

    /**
     * Creates new form Servidor
     */
    public F_sServidor() {
        initComponents();
        this.setLocationRelativeTo(null);
        this.getContentPane().setBackground(new Color(38, 34, 33));
        jLabel1.setIcon(new ImageIcon("src/Img/Logo_Server.png"));
        jLabel2.setIcon(new ImageIcon("src/Img/Iniciar_in.png"));
        jLabel3.setIcon(new ImageIcon("src/Img/Close.png"));
    }

    public void Execute() throws IOException {
        WConnexion = new Thread(this);
        WConnexion.start();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jTextFieldRound1 = new jtextfieldround.JTextFieldRound();
        jPasswordFieldRound1 = new jtextfieldround.JPasswordFieldRound();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(300, 350));
        setMinimumSize(new java.awt.Dimension(300, 350));
        setUndecorated(true);
        setPreferredSize(new java.awt.Dimension(300, 350));
        setResizable(false);
        getContentPane().setLayout(null);
        getContentPane().add(jLabel1);
        jLabel1.setBounds(100, 30, 100, 100);

        jLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel2MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel2MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabel2MouseExited(evt);
            }
        });
        getContentPane().add(jLabel2);
        jLabel2.setBounds(20, 280, 260, 50);

        jLabel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel3MouseClicked(evt);
            }
        });
        getContentPane().add(jLabel3);
        jLabel3.setBounds(270, 10, 20, 20);

        jTextFieldRound1.setText("Puerto");
        jTextFieldRound1.setBackground(new java.awt.Color(38, 34, 33));
        jTextFieldRound1.setCaretColor(new java.awt.Color(255, 255, 255));
        jTextFieldRound1.setForeground(new java.awt.Color(255, 255, 255));
        jTextFieldRound1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldRound1KeyPressed(evt);
            }
        });
        jTextFieldRound1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextFieldRound1MouseClicked(evt);
            }
        });
        getContentPane().add(jTextFieldRound1);
        jTextFieldRound1.setBounds(25, 230, 250, 28);

        jPasswordFieldRound1.setText("Contraseña");
        jPasswordFieldRound1.setBackground(new java.awt.Color(38, 34, 33));
        jPasswordFieldRound1.setForeground(new java.awt.Color(255, 255, 255));
        jPasswordFieldRound1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jPasswordFieldRound1KeyPressed(evt);
            }
        });
        jPasswordFieldRound1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPasswordFieldRound1MouseClicked(evt);
            }
        });
        getContentPane().add(jPasswordFieldRound1);
        jPasswordFieldRound1.setBounds(25, 180, 250, 28);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jLabel3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel3MouseClicked
        s.cerrarConexion();
        System.exit(0);
    }//GEN-LAST:event_jLabel3MouseClicked

    private void jTextFieldRound1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldRound1KeyPressed
        if (evt.getKeyCode() != KeyEvent.VK_ENTER) {
            if (jTextFieldRound1.getText().equals("Puerto")) {
                jTextFieldRound1.setText("");
            }
        } else {
            try {
                Execute();
            } catch (IOException ex) {
            }
        }
    }//GEN-LAST:event_jTextFieldRound1KeyPressed

    private void jTextFieldRound1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextFieldRound1MouseClicked
        if (jTextFieldRound1.getText().equals("Puerto")) {
            jTextFieldRound1.setText("");
        }
    }//GEN-LAST:event_jTextFieldRound1MouseClicked

    private void jLabel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MouseClicked
        if (jTextFieldRound1.getText().equals("Puerto") || jTextFieldRound1.getText().equals("") || jPasswordFieldRound1.getText().equals("")) {
            Alerta a = new Alerta(1);
            a.setVisible(true);
        } else {
            try {
                Execute();
            } catch (IOException ex) {
            }
        }
    }//GEN-LAST:event_jLabel2MouseClicked

    private void jLabel2MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MouseEntered
        jLabel2.setIcon(new ImageIcon("src/Img/Iniciar_on.png"));
    }//GEN-LAST:event_jLabel2MouseEntered

    private void jLabel2MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MouseExited
        jLabel2.setIcon(new ImageIcon("src/Img/Iniciar_in.png"));
    }//GEN-LAST:event_jLabel2MouseExited

    private void jPasswordFieldRound1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jPasswordFieldRound1KeyPressed
        if (evt.getKeyCode() != KeyEvent.VK_ENTER) {
            if (jPasswordFieldRound1.getText().equals("Contraseña")) {
                jPasswordFieldRound1.setText("");
            }
        }
    }//GEN-LAST:event_jPasswordFieldRound1KeyPressed

    private void jPasswordFieldRound1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPasswordFieldRound1MouseClicked
        if (jPasswordFieldRound1.getText().equals("Contraseña")) {
            jPasswordFieldRound1.setText("");
        }
    }//GEN-LAST:event_jPasswordFieldRound1MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        F_sServidor f = new F_sServidor();
        f.setVisible(true);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private jtextfieldround.JPasswordFieldRound jPasswordFieldRound1;
    private jtextfieldround.JTextFieldRound jTextFieldRound1;
    // End of variables declaration//GEN-END:variables

    public void run() {
        try {
            Alerta a = new Alerta(5);
            this.setEnabled(false);
            a.setVisible(true);
            if (s.isConnected(jTextFieldRound1.getText())) {
                a.Connected();
                dispose();
                F_Servidor f = new F_Servidor(Integer.parseInt(jTextFieldRound1.getText()));
                f.setVisible(true);
            } else {
                a.TimeOut();
                this.setEnabled(true);
            }
        } catch (IOException ex) {
            Logger.getLogger(F_sServidor.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
}
